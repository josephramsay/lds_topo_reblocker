---

################################################################################
#
# Copyright 2013 Crown copyright (c)
# Land Information New Zealand and the New Zealand Government.
# All rights reserved
#
# This program is released under the terms of the new BSD license. See the
# LICENSE file for more information.
#
################################################################################

### SANITY CHECKS
- name: Check Ansible version
  assert:
    that:
      - ansible_version.major == 2
      - ansible_version.major >= 0

#- name: Check if project name (PROJECT_NAME) is set
  assert:
    that:
      - PROJECT_NAME|default(False)

#- name: Check if role name (ROLE_NAME) is set
  assert:
    that:
      - ROLE_NAME|default(False)

### SECRET VARIABLES
- name: Load encrypted variables file
  include_vars: linz.yml

#- name: Show decrypted username
#  debug:
#    var: linz_repository_username  

#### DEBUG : Print hostvars
#- name: Display all variables/facts known for a host
#  debug:
#    var: hostvars[inventory_hostname]
#
- name: Display web proxy vars
  debug:
    var: web_proxy
     
- name: Display apt proxy vars
  debug:
    var: apt_proxy
   
### VARIABLES
- name: Set IP address variable
  set_fact:
    SYSTEM_IP_ADDRESS: "{{ hostvars[inventory_hostname]['ansible_'+SYSTEM_NETWORK_DEVICE]['ipv4'].address }}"


### SYSTEM CONFIGURATION
- name: Generate en_US.UTF-8 locale
  locale_gen:
    name: en_US.UTF-8
    state: present
  become: yes
 
- name: Set timezone
  template:
    src: timezone.j2
    dest: /etc/timezone
  notify:
    - reconfigure timezone
  become: yes
  
- name: Configure CNTLM
  template:
    src: cntlm.j2
    dest: /etc/cntlm.conf
    mode: 0644
  become: yes
  
- name: Restart CNTLM
  service:
    name: cntlm
    state: restarted
    sleep: 1
  become: yes
  
#- name: Init Functions
#  command: ". /lib/lsb/init-functions"
#  become: yes
#  
#- name: Check CNTLM status
#  command: status_of_proc -p /var/run/cntlm/cntlm.pid /usr/sbin/cntlm cntlm
#  become: yes
 
### DEBUG : Print proxy
#- name: Check value of web proxy
#  debug:
#    var: web_proxy
#
#- name: Check that you can connect (GET) to a page and it returns a status 200
#  uri:
#    url: http://www.internic.net
#    return_content: yes
#  environment:
#    #http_proxy: http://localhost:3128
#    #http_proxy: http://127.0.0.1:3128
#    http_proxy: http://10.80.6.57:3128

    
### REPOSITORIES
- name: Detect closest apt mirrors based on geographic location
  uri:
    url: http://mirrors.ubuntu.com/mirrors.txt
    return_content: yes
  environment: "{{ web_proxy }}"
  register: repository_mirrors

- name: Set apt mirror
  set_fact:
    repository_mirror: "{{ repository_mirrors.content.splitlines()[0] }}"

- name: Install basic Apt repositories
  template:
    src: sources.list.j2
    dest: /etc/apt/sources.list
  become: yes

- name: Install PostgreSQL repository (apt.postgresql.org)
  apt_repository:
    repo: "{{ pgdg_repository }}"
    state: present
    update_cache: no
  become: yes

- name: Install PostgreSQL repository key (apt.postgresql.org)
  apt_key:
    id: "{{ pgdg_repository_key_id }}"
    data: "{{ pgdg_repository_key }}"
    state: present
  become: yes
  
  
- name: Install LINZ Software Repository
  apt_repository:
    repo: "{{ linz_repository }}"
    state: present
    update_cache: no
  become: yes

- name: Install LINZ Software Repository key
  apt_key:
    id: "{{ linz_repository_key_id }}"
    data: "{{ linz_repository_key }}"
    state: present
  become: yes


### Update
- name: Update Apt cache
  apt:
    update_cache: yes
  #shell: apt update #use this if apt:update_cache:yes fails
  environment: "{{ apt_proxy }}"
  become: yes
 

- name: Upgrade system
  apt:
    upgrade: full
    force: yes
  environment: "{{ apt_proxy }}"
  become: yes
  when: SYSTEM_UPGRADE

